#! /usr/bin/python3

PACKAGE = 'tracking'
# import roslib

# roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

pdaf = gen.add_group("PDAF")
pdaf.add("validation_gate_scaling_param", double_t, 0, "validation_gate_scaling_param", 1, 0.5, 3)
pdaf.add("p_no_match", double_t, 0, "probability that no obsevations originate from the target", 0.5, 0.01, 1)
pdaf.add("Q_00", double_t, 0, "Covariance matrix of the model disturbance, with state vector [x, y, x', y']", 0.01, 0.001, 10)
pdaf.add("Q_11", double_t, 0, "Covariance matrix of the model disturbance, with state vector [x, y, x', y']", 0.01, 0.001, 10)
pdaf.add("Q_22", double_t, 0, "Covariance matrix of the model disturbance, with state vector [x, y, x', y']", 0.01, 0.001, 10)
pdaf.add("Q_33", double_t, 0, "Covariance matrix of the model disturbance, with state vector [x, y, x', y']", 0.01, 0.001, 10)

pdaf.add("R_00", double_t, 0, "Covariance matrix of measurement noise, where states x and y are measured.", 0.01, 0.001, 10)
pdaf.add("R_11", double_t, 0, "Covariance matrix of measurement noise, where states x and y are measured.", 0.01, 0.001, 10)

manager = gen.add_group("Manager")
manager.add("N_resurrect", int_t, 0, "", 5, 1, 15)
manager.add("M_resurrect", int_t, 0, "", 8, 1, 15)
manager.add("N_kill", int_t, 0, "", 5, 1, 15)
manager.add("M_kill", int_t, 0, "", 8, 1, 15)
manager.add("max_vel", double_t, 0, "max velocity of target", 10.0, 0.0, 20.0)
manager.add("initial_measurement_covariance", double_t, 0, "Variance used for computing validation gate for tentative tracks.", 2.0, 0.01, 10.0)



exit(gen.generate(PACKAGE, "tracking", "Tracking"))